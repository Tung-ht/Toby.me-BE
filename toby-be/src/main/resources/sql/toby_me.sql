/*
 Navicat Premium Data Transfer

 Source Server         : server db
 Source Server Type    : MySQL
 Source Server Version : 80028
 Source Host           : 192.168.1.5:3307
 Source Schema         : toby_me

 Target Server Type    : MySQL
 Target Server Version : 80028
 File Encoding         : 65001

 Date: 07/07/2023 09:27:58
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for articles
-- ----------------------------
DROP TABLE IF EXISTS `articles`;
CREATE TABLE `articles`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `body` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `slug` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `title` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `author_id` bigint NOT NULL,
  `is_approved` int NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `FKe02fs2ut6qqoabfhj325wcjul`(`author_id` ASC) USING BTREE,
  CONSTRAINT `FKe02fs2ut6qqoabfhj325wcjul` FOREIGN KEY (`author_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of articles
-- ----------------------------
INSERT INTO `articles` VALUES (1, '2023-07-07 08:26:16', '2023-07-07 08:37:57', '<p><strong>Docker</strong>&nbsp;l√† m·ªôt d·ª± √°n ngu·ªìn m·ªü n√≥ cho ph√©p t·ª± ƒë·ªông h√≥a vi·ªác tri·ªÉn khai c√°c ·ª©ng d·ª•ng b√™n trong c√°c Container (Linux), cung nh∆∞ cung c·∫•p ch·ª©c nƒÉng ƒë√≥ng g√≥i c√°c th√†nh ph·∫ßn c·∫ßn ƒë·ªÉ ch·∫°y ·ª©ng d·ª•ng v√†o Container. Docker cung c·∫•p c√¥ng c·ª• CLI (Command Line Interface) ƒë·ªÉ qu·∫£n l√Ω v√≤ng ƒë·ªùi c·ªßa c√°c container. S·ª≠ d·ª•ng Docker l√† c√°ch nhanh ch√≥ng ƒë·ªÉ ph√°t tri·ªÉn, tri·ªÉn khai, b·∫£o tr√¨ c√°c ·ª©ng d·ª•ng.</p><p><br></p><blockquote>Docker c√≥ s·ª± kh√°c bi·ªát so v·ªõi m√°y ·∫£o, m√°y ·∫£o l√† m·ªôt h·ªá th·ªëng ƒë·∫ßy ƒë·ªß v·ªõi t·∫•t c·∫£ c√°c ph·∫ßn m·ªÅm, h·ªá ƒëi·ªÅu h√†nh. C√°c Docker Container th√¨ cung c·∫•p cho ·ª©ng d·ª•ng m·ªôt m√¥i tr∆∞·ªùng c√°ch ly v√† ƒë∆∞·ª£c c·∫•u h√¨nh t·ªëi thi·ªÉu ƒë·ªÉ ·ª©ng d·ª•ng ho·∫°t ƒë·ªông ƒë∆∞·ª£c. V·ªõi Container nh√¢n v√† c√°c th√†nh ph·∫ßn c·ªßa h·ªá ƒëi·ªÅu h√†nh ƒë∆∞·ª£c chia s·∫ª.</blockquote><p><br></p><p>M·ªôt s·ªë ∆∞u ƒëi·ªÉm c·ªßa Docker Container so v·ªõi c√¥ng ngh·ªá ·∫£o h√≥a:</p><ul><li>T·∫°o v√† h·ªßy container r·∫•t nhanh v√† d·ªÖ d√†ng, M√°y √°o th√¨ c·∫ßn c√†i ƒë·∫∑t ƒë·∫ßy ƒë·ªß m·ªçi th·ª© v√† c·∫ßn nhi·ªÅu t√†i nguy√™n h·ªá th·ªëng h∆°n.</li><li>Container r·∫•t nh·ªè, v√¨ v·∫≠y m√† tr√™n m·ªôt m√°y Host s·ªë container ch·∫°y song song v·ªõi nhau nhi·ªÅu h∆°n s·ªë m√°y √°o ch·∫°y song song.</li></ul><p>Chuy√™n m·ª•c n√†y l√† c√°c b√†i vi·∫øt h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Docker, ch√∫ tr·ªçng v√†o th·ª±c h√†nh ƒë·ªÉ c√≥ th·ªÉ nhanh ch√≥ng √°p d·ª•ng th·ª±c t·∫ø.</p><h2><br></h2><h2>M·ªôt s·ªë l·ªánh Docker</h2><p>Ki·ªÉm tra phi√™n b·∫£n docker:</p><blockquote>docker --version</blockquote><p>Th√¥ng tin h·ªá th·ªëng docker</p><pre class=\"ql-syntax\" spellcheck=\"false\">docker info\n</pre><p>Li·ªát k√™ c√°c image</p><pre class=\"ql-syntax\" spellcheck=\"false\">docker images -a\n</pre><p>T·∫£i v·ªÅ m·ªôt image t·ª´ hub.docker.com</p><pre class=\"ql-syntax\" spellcheck=\"false\">docker pull nameimage:tag\n</pre><p>Li·ªát k√™ c√°c container ƒëang ch·∫°y</p><pre class=\"ql-syntax\" spellcheck=\"false\">docker ps\n</pre><p>Li·ªát k√™ c√°c container</p><pre class=\"ql-syntax\" spellcheck=\"false\">docker ps -a\n</pre><p>Li·ªát k√™ c√°c container</p><pre class=\"ql-syntax\" spellcheck=\"false\">docker container ls -a\n</pre>', 'S∆° l∆∞·ª£c v·ªÅ Docker. Docker l√† g√¨? T·∫°i sao hi·ªán t·∫°i h·∫ßu h·∫øt c√°c d·ª± √°n ƒë·ªÅu ph·∫£i c·∫ßn ƒë·∫øn n√≥?', 'Series:-Docker-from-Zero-to-Hero---Ph·∫ßn-1-2023-07-07T08:26:36.365331', 'Series: Docker from Zero to Hero - Ph·∫ßn 1', 1, 1);
INSERT INTO `articles` VALUES (2, '2023-07-07 09:04:38', '2023-07-07 09:27:14', '<pre class=\"ql-syntax\" spellcheck=\"false\">@Transactional(readOnly = true)\n@Override\npublic String login(UserDto.Login login) {\n    UserEntity userEntity = userRepository.findAllByEmailAndStatus(login.getEmail(), EStatus.ACTIVE)\n            .stream()\n            .filter(user -&gt; passwordEncoder.matches(login.getPassword(), user.getPassword()))\n            .findFirst()\n            .orElseThrow(() -&gt; new AppException(Error.LOGIN_INFO_INVALID));\n    String jwt = jwtUtils.encode(userEntity.getEmail());\n    var userDetail = AuthUserDetails.builder()\n            .id(userEntity.getId())\n            .email(userEntity.getEmail())\n            .authorities(userEntity.getRoles())\n            .build();\n    // when a user logged in, (jwt-userInfo)-(string-jsonString) is cached into redis\n    var jsonStr = JsonConverter.serializeObject(userDetail);\n    redisTemplate.opsForValue()\n            .set(jwt, jsonStr, Duration.ofSeconds(jwtUtils.getValidSeconds()));\n    return jwt;\n}\n</pre>', 'e g·∫∑p l·ªói trong ƒëo·∫°n code n√†y, m·ªçi ng∆∞·ªùi gi√∫p em fix v·ªõi ·∫°', 'L·ªói-khi-s·ª≠-d·ª•ng-spring-data-redis-1688695477723', 'L·ªói khi s·ª≠ d·ª•ng spring data redis', 2, 1);
INSERT INTO `articles` VALUES (3, '2023-07-07 09:05:54', '2023-07-07 09:06:47', '<p>const handleDeleteArticle = async (slug: string) =&gt; {</p><p>  try {</p><p>    setLoading(true);</p><p>    const rs = await adminDeleteArticle(slug);</p><p><br></p><p>    if (rs.status === 200) {</p><p>      setOutArticle(false);</p><p>      notifySuccess(\'B√†i vi·∫øt ƒë√£ b·ªã t·ª´ ch·ªëi\');</p><p>    } else {</p><p>      notifyError(\'T·ª´ ch·ªëi b√†i vi·∫øt th·∫•t b·∫°i\');</p><p>    }</p><p>  } catch (error) {</p><p>    notifyError(\'T·ª´ ch·ªëi b√†i vi·∫øt th·∫•t b·∫°i\');</p><p>    <em>console</em>.log(\'üöÄ -&gt; handleApproveArticle -&gt; error:\', error);</p><p>  } finally {</p><p>    setLoading(false);</p><p>  }</p><p>};</p>', 'help me bros', 'Reactjs-async-2023-07-07T09:06:46.974176300', 'Reactjs async', 2, 0);

-- ----------------------------
-- Table structure for available_tags
-- ----------------------------
DROP TABLE IF EXISTS `available_tags`;
CREATE TABLE `available_tags`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `tag_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `is_pinned` int NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 20 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of available_tags
-- ----------------------------
INSERT INTO `available_tags` VALUES (1, 'java', NULL);
INSERT INTO `available_tags` VALUES (2, 'html', NULL);
INSERT INTO `available_tags` VALUES (3, 'css', NULL);
INSERT INTO `available_tags` VALUES (4, 'go', NULL);
INSERT INTO `available_tags` VALUES (5, 'spring-boot', NULL);
INSERT INTO `available_tags` VALUES (6, 'reactjs', NULL);
INSERT INTO `available_tags` VALUES (7, 'javascript', NULL);
INSERT INTO `available_tags` VALUES (8, 'fix-bug', NULL);
INSERT INTO `available_tags` VALUES (9, 'h·ªèi ƒë√°p', NULL);
INSERT INTO `available_tags` VALUES (10, 'docker', NULL);
INSERT INTO `available_tags` VALUES (11, '.net', NULL);
INSERT INTO `available_tags` VALUES (12, 'c#', NULL);
INSERT INTO `available_tags` VALUES (13, 'nosql', NULL);
INSERT INTO `available_tags` VALUES (14, 'sql', NULL);
INSERT INTO `available_tags` VALUES (15, 't∆∞ v·∫•n', NULL);
INSERT INTO `available_tags` VALUES (16, 't√¢m s·ª±', NULL);
INSERT INTO `available_tags` VALUES (17, 'ch√©m gi√≥', NULL);
INSERT INTO `available_tags` VALUES (18, 'th√¥ng b√°o', 1);
INSERT INTO `available_tags` VALUES (19, 'n·ªôi quy', 1);
INSERT INTO `available_tags` VALUES (20, 'n·ªïi b·∫≠t', 1);
-- ----------------------------
-- Table structure for comments
-- ----------------------------
DROP TABLE IF EXISTS `comments`;
CREATE TABLE `comments`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime NULL DEFAULT NULL,
  `updated_at` datetime NULL DEFAULT NULL,
  `body` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `article_id` bigint NOT NULL,
  `author_id` bigint NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `FKk4ib6syde10dalk7r7xdl0m5p`(`article_id` ASC) USING BTREE,
  INDEX `FKn2na60ukhs76ibtpt9burkm27`(`author_id` ASC) USING BTREE,
  CONSTRAINT `FKk4ib6syde10dalk7r7xdl0m5p` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FKn2na60ukhs76ibtpt9burkm27` FOREIGN KEY (`author_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of comments
-- ----------------------------
INSERT INTO `comments` VALUES (1, '2023-07-07 08:27:17', '2023-07-07 08:27:17', 'C√°c b·∫°n ƒë√≥n ch·ªù ph·∫ßn 2 nh√©!\n', 1, 1);
INSERT INTO `comments` VALUES (2, '2023-07-07 08:42:03', '2023-07-07 08:42:03', 'amazing g√∫t ch√≥p em', 1, 2);
INSERT INTO `comments` VALUES (3, '2023-07-07 08:44:08', '2023-07-07 08:44:08', 'dfasdf', 1, 2);
INSERT INTO `comments` VALUES (4, '2023-07-07 09:07:57', '2023-07-07 09:07:57', 'b·∫°n format l·∫°i n·ªôi dung b√†i vi·∫øt cho ƒë·ª° ƒëau m·∫Øt nh√© damm bro', 3, 1);

-- ----------------------------
-- Table structure for favorites
-- ----------------------------
DROP TABLE IF EXISTS `favorites`;
CREATE TABLE `favorites`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime NULL DEFAULT NULL,
  `updated_at` datetime NULL DEFAULT NULL,
  `article_id` bigint NULL DEFAULT NULL,
  `user_id` bigint NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `FKg5bjjgr1bd2g8guv8125gts3s`(`article_id` ASC) USING BTREE,
  INDEX `FKk7du8b8ewipawnnpg76d55fus`(`user_id` ASC) USING BTREE,
  CONSTRAINT `FKg5bjjgr1bd2g8guv8125gts3s` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FKk7du8b8ewipawnnpg76d55fus` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of favorites
-- ----------------------------
INSERT INTO `favorites` VALUES (1, '2023-07-07 08:41:36', '2023-07-07 08:41:36', 1, 2);
INSERT INTO `favorites` VALUES (2, '2023-07-07 09:27:20', '2023-07-07 09:27:20', 2, 1);
INSERT INTO `favorites` VALUES (3, '2023-07-07 09:27:24', '2023-07-07 09:27:24', 1, 1);

-- ----------------------------
-- Table structure for follows
-- ----------------------------
DROP TABLE IF EXISTS `follows`;
CREATE TABLE `follows`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime NULL DEFAULT NULL,
  `updated_at` datetime NULL DEFAULT NULL,
  `followee_id` bigint NOT NULL,
  `follower_id` bigint NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `u_follow_followee_pair_must_be_unique`(`followee_id` ASC, `follower_id` ASC) USING BTREE,
  INDEX `FKjnqt4f5bti6niw7afunse4de7`(`follower_id` ASC) USING BTREE,
  CONSTRAINT `FKa58cq5w7xon5bn0m7e7n6lbwt` FOREIGN KEY (`followee_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FKjnqt4f5bti6niw7afunse4de7` FOREIGN KEY (`follower_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of follows
-- ----------------------------
INSERT INTO `follows` VALUES (1, '2023-07-07 08:41:39', '2023-07-07 08:41:39', 1, 2);
INSERT INTO `follows` VALUES (2, '2023-07-07 09:27:22', '2023-07-07 09:27:22', 2, 1);

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `role` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES (1, 'ROLE_SUPER_ADMIN');
INSERT INTO `roles` VALUES (2, 'ROLE_ADMIN');
INSERT INTO `roles` VALUES (3, 'ROLE_USER');

-- ----------------------------
-- Table structure for tags
-- ----------------------------
DROP TABLE IF EXISTS `tags`;
CREATE TABLE `tags`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime NULL DEFAULT NULL,
  `updated_at` datetime NULL DEFAULT NULL,
  `tag` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `article_id` bigint NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `FK2b4i2k07k9ecvfc94946uhat8`(`article_id` ASC) USING BTREE,
  CONSTRAINT `FK2b4i2k07k9ecvfc94946uhat8` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tags
-- ----------------------------
INSERT INTO `tags` VALUES (2, '2023-07-07 08:26:36', '2023-07-07 08:26:36', 'docker', 1);
INSERT INTO `tags` VALUES (3, '2023-07-07 09:04:38', '2023-07-07 09:04:38', 'java', 2);
INSERT INTO `tags` VALUES (4, '2023-07-07 09:04:38', '2023-07-07 09:04:38', 'spring-boot', 2);
INSERT INTO `tags` VALUES (5, '2023-07-07 09:04:38', '2023-07-07 09:04:38', 'fix-bug', 2);
INSERT INTO `tags` VALUES (6, '2023-07-07 09:04:38', '2023-07-07 09:04:38', 'h·ªèi ƒë√°p', 2);
INSERT INTO `tags` VALUES (13, '2023-07-07 09:06:47', '2023-07-07 09:06:47', 'reactjs', 3);
INSERT INTO `tags` VALUES (14, '2023-07-07 09:06:47', '2023-07-07 09:06:47', 'javascript', 3);
INSERT INTO `tags` VALUES (15, '2023-07-07 09:06:47', '2023-07-07 09:06:47', 'fix-bug', 3);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime NULL DEFAULT NULL,
  `updated_at` datetime NULL DEFAULT NULL,
  `bio` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL,
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `image` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL,
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `username` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `status` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `otp` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES (1, '2023-07-07 08:16:11', '2023-07-07 08:18:58', 'sugoiiii', 'tungxtnd0@gmail.com', 'https://wallpapers.com/images/hd/hacker-pictures-4xhiey685feo8stu.jpg', '12345678', 'tungdeptraii', 'ACTIVE', '917494');
INSERT INTO `users` VALUES (2, '2023-07-07 08:39:17', '2023-07-07 08:43:44', 'tommy - xiaomi', 'sogoj35350@kameili.com', 'https://images.unsplash.com/photo-1562860149-691401a306f8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGhhY2tlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80', '12345678', 'tommy1xaomi', 'ACTIVE', '856934');

-- ----------------------------
-- Table structure for users_roles_nn
-- ----------------------------
DROP TABLE IF EXISTS `users_roles_nn`;
CREATE TABLE `users_roles_nn`  (
  `user_id` bigint NOT NULL,
  `role_id` bigint NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`) USING BTREE,
  INDEX `FK3l81w80fhpyeav0l6ual9uvw9`(`role_id` ASC) USING BTREE,
  CONSTRAINT `FK3l81w80fhpyeav0l6ual9uvw9` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `FKasbhg5qkd4qqyog36gtqbjp52` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

DROP TABLE IF EXISTS `notification`;
CREATE TABLE `notification`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime NULL DEFAULT NULL,
  `updated_at` datetime NULL DEFAULT NULL,
  `to_user_id` varchar(255) NOT NULL ,
  `message` varchar(255),
  `type` varchar(25) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `from_user_id` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `post_id` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `comment_id` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `is_read` BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users_roles_nn
-- ----------------------------
INSERT INTO `users_roles_nn` VALUES (1, 1);
INSERT INTO `users_roles_nn` VALUES (1, 2);
INSERT INTO `users_roles_nn` VALUES (1, 3);
INSERT INTO `users_roles_nn` VALUES (2, 3);

SET FOREIGN_KEY_CHECKS = 1;
